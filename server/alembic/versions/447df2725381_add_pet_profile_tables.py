"""Add pet profile tables

Revision ID: 447df2725381
Revises: eb78ba415c20
Create Date: 2025-08-28 19:04:31.243654

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '447df2725381'
down_revision = 'eb78ba415c20'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('otps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('otp_code', sa.String(length=6), nullable=False),
    sa.Column('purpose', sa.Enum('LOGIN', 'FAMILY_INVITE', 'PET_ACCESS', name='otppurpose'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_otps'))
    )
    op.create_index(op.f('ix_otps_phone_number'), 'otps', ['phone_number'], unique=False)
    op.create_table('owners',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_owners'))
    )
    op.create_index(op.f('ix_owners_phone_number'), 'owners', ['phone_number'], unique=True)
    op.create_table('families',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('admin_owner_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['admin_owner_id'], ['owners.id'], name=op.f('fk_families_admin_owner_id_owners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_families'))
    )
    op.create_table('pets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pet_id', sa.String(length=50), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('pet_type', sa.String(length=20), nullable=False),
    sa.Column('breed', sa.String(length=50), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'UNKNOWN', name='gender'), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('photos', sa.JSON(), nullable=False),
    sa.Column('emergency_contacts', sa.JSON(), nullable=False),
    sa.Column('insurance_info', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name=op.f('fk_pets_owner_id_owners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pets'))
    )
    op.create_index(op.f('ix_pets_pet_id'), 'pets', ['pet_id'], unique=True)
    op.create_table('family_invitations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('family_id', sa.UUID(), nullable=False),
    sa.Column('invited_phone', sa.String(length=15), nullable=False),
    sa.Column('invited_name', sa.String(length=100), nullable=False),
    sa.Column('invited_by', sa.UUID(), nullable=False),
    sa.Column('invite_code', sa.String(length=10), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['family_id'], ['families.id'], name=op.f('fk_family_invitations_family_id_families')),
    sa.ForeignKeyConstraint(['invited_by'], ['owners.id'], name=op.f('fk_family_invitations_invited_by_owners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_family_invitations'))
    )
    op.create_index(op.f('ix_family_invitations_invite_code'), 'family_invitations', ['invite_code'], unique=True)
    op.create_index(op.f('ix_family_invitations_invited_phone'), 'family_invitations', ['invited_phone'], unique=False)
    op.create_table('family_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('family_id', sa.UUID(), nullable=False),
    sa.Column('access_level', sa.Enum('FULL', 'READ_ONLY', name='accesslevel'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['family_id'], ['families.id'], name=op.f('fk_family_members_family_id_families')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_family_members'))
    )
    op.create_index(op.f('ix_family_members_phone_number'), 'family_members', ['phone_number'], unique=True)
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_table('tasks')
    op.alter_column('users', 'email_verification_expires',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('users', 'password_reset_expires',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'password_reset_expires',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'email_verification_expires',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.drop_index(op.f('ix_family_members_phone_number'), table_name='family_members')
    op.drop_table('family_members')
    op.drop_index(op.f('ix_family_invitations_invited_phone'), table_name='family_invitations')
    op.drop_index(op.f('ix_family_invitations_invite_code'), table_name='family_invitations')
    op.drop_table('family_invitations')
    op.drop_index(op.f('ix_pets_pet_id'), table_name='pets')
    op.drop_table('pets')
    op.drop_table('families')
    op.drop_index(op.f('ix_owners_phone_number'), table_name='owners')
    op.drop_table('owners')
    op.drop_index(op.f('ix_otps_phone_number'), table_name='otps')
    op.drop_table('otps')
    # ### end Alembic commands ###
